##################################################################################################
# I_h2 #####################################################################################
##################################################################################################

"""
    val = I_h2(k, x)

# Input
 - `k::Int`: frequency
 - `x::Float64`: point

# Output
 - `val::Float64`: value of the k-th basis function of the Sobolev space H2
"""
function I_h2(k::Int, x::Float64)::Float64
  if k == 0
    return 1.0
  elseif k == 1
    return 2*sqrt(3)*x-sqrt(3)
  elseif k <= 9
    if k == 2
         t = 4.73004074486270402602404810083388481990
    elseif k == 3
         t = 7.85320462409583755647706668725404979032
    elseif k == 4
         t = 10.9956078380016709066690325191058924175
    elseif k == 5
         t = 14.1371654912574641771059178550933307529
    elseif k == 6
         t = 17.2787596573994814380910739757686440135
    elseif k == 7
         t = 20.4203522456260610909364111893130796499
    elseif k == 8
         t = 23.5619449020404550753920168006414978189
    elseif k == 9
         t = 26.7035375555081862484194076457585722522
    end
    return cosh(t*x)+cos(t*x)-(cosh(t)-cos(t))/(sinh(t)-sin(t))*(sinh(t*x)+sin(t*x))
  else
    t = π*(2k-1)/2
    return sqrt(2)*cos(t*x+π/4) + ( x <= 1/2 ? exp(-t*x) : (-1)^k*exp(-t*(1-x)) )
  end
end
